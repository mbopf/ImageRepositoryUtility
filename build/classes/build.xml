<!DOCTYPE project []>
<project name="iru" default="info" basedir=".">
  <!-- To use this build.xml file will use the default build.properties file
       unless it is started with -Dbp=<alternate prefix>. In this
       way we can have predefined sets of property configurations -->
  <property name="bp" value="build" />
  <property file="${user.home}/${bp}.properties"/>
  <property file="../${bp}.properties"/>
  <property file="${bp}.properties"/>

  <!-- Load the common properties that aren't affected by the version of the
       system being built/run. -->
  <property file="common.properties" />

  <!-- give access to environment variables, using format env.*;
     For example, CLASSPATH would be env.CLASSPATH -->
  <property environment="env"/>

  <!-- Create all required directories -->
  <target name="prepare"
	  description="Creates the build and dist directories" >
     <echo message="Creating the required directories...." />
     <mkdir dir="${build}" />
     <mkdir dir="${dist}" />
     <mkdir dir="${javadocs}" />
  </target>
  
  <path id="debug.sourcepath">
    <pathelement path="."/>
  </path>

  <path id="build.classpath">
    <pathelement path="${ingest-jars}"/>
  </path>

  <path id="ingest.classpath">
    <pathelement path="${build}:${ingest-jars}"/>
  </path>

  <!-- Compile everything -->
  <target name="compileAll" depends="prepare"
	  description="Compiles _all_ out-of-date files">
    <echo message="Compiling all files" />
    <javac srcdir="." destdir="${build}" debug="on" failonerror="true"
           target="1.5" source="1.5">
	    <classpath refid="ingest.classpath" /> 
    </javac>
  </target>

  <!-- Runs the ingest script -->
  <target name="ingest" depends="compileAll, copyIngestFiles"
	  description="Runs ingest">
    <echo message="Running the ${ingest-class} program...." />
    <!-- DBDataSource gets properties file using ResourceAsStream -->
    <java fork="on"
    	    classpathref="ingest.classpath"
          classname="${ingest-class}" >
      <sysproperty key="log4j.configuration" value="${config}/ingestLog4j.properties" />
      <jvmarg value="-Xmx512M"/>
    </java>
  </target>

  <!-- Runs the Checksummer test -->
  <target name="checksum" depends="compileAll"
	  description="Runs checksum">
    <echo message="Running the ${checksum-class} program...." />
    <input message="Enter filename to determine checksum: " addproperty="inputFile" />
    <java fork="on"
    	    classpathref="ingest.classpath"
          classname="${checksum-class}" >
      <sysproperty key="log4j.configuration" value="${config}/ingestLog4j.properties" />
      <jvmarg value="-Xmx512M"/>
      <arg value="${inputFile}"/>
    </java>
  </target>

  <!-- Copy (or create) necessary configuration files -->
    <target name="copyIngestFiles" depends="genDataSourceFile, genIruFile"
	  description="Copies property files needed">
    <copy file="${config}/ingestLog4j.properties" todir="${build}" />
  </target>

  <target name="genIruFile" depends="prepare">
    <propertyfile comment="This properties file was automatically generated by the ant build file"
		  file="${build}/${iru.properties.file}">
      <entry key="inputDirectory" value="${inputDirectory}"/>
      <entry key="outputDirectory" value="${outputDirectory}"/>
      <entry key="imageUrlPrefix" value="${imageUrlPrefix}"/>
      <entry key="datasetName" value="${datasetName}"/>
      <entry key="imageType" value="${imageType}"/>
      <entry key="compressType" value="${compressType}"/>
      <entry key="compressRatio" value="${compressRatio}"/>
      <entry key="roiFlag" value="${roiFlag}"/>
      <entry key="subdirectoryFlag" value="${subdirectoryFlag}"/>
      <entry key="inputFilter" value="${inputFilter}"/>
      <entry key="inputMode" value="${inputMode}"/>
      <entry key="copyMode" value="${copyMode}"/>
      <entry key="dbMode" value="${dbMode}"/>
      <entry key="comment" value="${comment}"/>
    </propertyfile>
  </target>

  <target name="-getDbPass">
    <input message="Password for '${data.dbLogin}' database user on server '${dbServer}': "
           addproperty="data.dbPassword" />
  </target>

  <target name="genDataSourceFile" depends="prepare, -getDbPass">
    <fail unless="data.dbPassword" 
          message="Need to specify password for database user '${data.dbLogin}'" />
    <propertyfile comment="This properties file was automatically generated by the ant build file"
		  file="${build}/${datasource.properties.file}">
      <entry key="datasource.resource" value="${datasource.resource}"/>
      <entry key="datasource.appPrepend" value="${datasource.appPrepend}"/>
      <entry key="gov.nih.nlm.ceb.data.JNDIName" value="${data.JNDIName}"/>
      <entry key="gov.nih.nlm.ceb.data.dbDriver" value="${data.dbDriver}"/>
      <entry key="gov.nih.nlm.ceb.data.dbServer" value="${data.dbServer}"/>
      <entry key="gov.nih.nlm.ceb.data.dbLogin" value="${data.dbLogin}"/>
      <entry key="gov.nih.nlm.ceb.data.dbPassword" value="${data.dbPassword}"/>
    </propertyfile>
  </target>

  <target name="nbIngestDebug" depends="compileAll, copyIngestFiles" 
          if="netbeans.home" description="Netbeans Debug task"> 
    <nbjpdastart name="${appName}" addressproperty="jpda.address" 
                 transport="dt_socket">
     <classpath refid="ingest.classpath"/>
     <!-- Optional - If source roots are properly declared in project, should
	      work without setting source path.-->
     <sourcepath refid="debug.sourcepath"/> 
    </nbjpdastart>
    
    <java fork="true" classname="${ingest-class}" >
      <sysproperty key="log4j.configuration" value="${config}/ingestLog4j.properties" />
      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Xnoagent"/>
      <jvmarg value="-Djava.compiler=none"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
      <jvmarg value="-Xmx512M"/>
      <classpath refid="ingest.classpath"/>
    </java>
  </target>

  <!-- Generate javadoc for all code -->
  <target name="javadocs" description="Generates javadocs for project">
    <javadoc destdir="${javadocs}" windowtitle="${appname} API" defaultexcludes="yes"
    	       sourcePath="." packagenames="gov.*" >
      <classpath refId ="build-classpath" />
   </javadoc>
  </target>

  <!-- Delete both the "build" and "dist" directories entirely -->
  <target name="cleanAll"
  	      description="Removes all generated directories">
    <delete dir="${build}" />
    <delete dir="${dist}" />
    <delete dir="${javadocs}" />
  </target>

  <!-- Blow away the whole "build" directory -->
  <target name="clean" description="Removes the build directory">
    <delete dir="${build}" />
  </target>

  <!-- Display all pertinent environment variables and properties -->
  <target name="info"
	  description="Displays values of some of the properties of this build file">
    <echo message="  appName: ${appName}" />
    <echo message="  imgServer: ${imgServer}" />
    <echo message="  dbServer: ${dbServer}" />
    <echo message="  dbName: ${dbName}" />
    <echo message="  imageUrlPrefix: ${imageUrlPrefix}" />
    <echo message="  inputDirectory: ${inputDirectory}" />
    <echo message="  outputDirectory: ${outputDirectory}" />
    <echo message="  datasetName: ${datasetName}" />
    <echo message="  imageType: ${imageType}" />
    <echo message="  subdirectoryFlag: ${subdirectoryFlag}" />
    <echo message="  inputFilter: ${inputFilter}" />
    <echo message="  compressType: ${compressType}" />
    <echo message="  compressRatio: ${compressRatio}" />
    <echo message="  inputMode: ${inputMode}" />
    <echo message="  copyMode: ${copyMode}" />
    <echo message="  dbMode: ${dbMode}" />
    <echo message="  comment: ${comment}" />
    <echo message="  datasource.resource: ${datasource.resource}" />
    <echo message="  datasource.appPrepend: ${datasource.appPrepend}" />
    <echo message="  data.JNDIName: ${data.JNDIName}" />
    <echo message="  data.dbDriver: ${data.dbDriver}" />
    <echo message="  data.dbServer: ${data.dbServer}" />
    <echo message="  data.dbLogin: ${data.dbLogin}" />
    <echo message="  ingest-jars: ${ingest-jars}" />
    <echo message="  ant.version: ${ant.version}" />
    <echo message="  env.JAVA_HOME: ${env.JAVA_HOME}" />
  </target>
</project>
